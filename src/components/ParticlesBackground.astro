---
import Particles from "astro-particles";
import type { ISourceOptions } from "@tsparticles/engine";

const options: ISourceOptions = {
  // que el canvas sea transparente
  background: { color: { value: "transparent" } },
  fullScreen: {
    // que el canvas quede POR ENCIMA del fondo de la sección
    // pero por debajo del contenido (tu contenido ya tiene z-10)
    zIndex: 100
  },
  particles: {
    number: { value: 100 },
    move: { enable: true, speed: 0.5 },
    // poné colores bien visibles para probar
    color: { value: "#ffffff" },
    links: { enable: true, distance: 120, color: "#ffffff", opacity: 0.6, width: 1 }
  }
};
---

<Particles
  id="tsparticles"
  options={{ ...options, fullScreen: { enable: false } }}
  class="pointer-events-none absolute inset-0 z-100"
  init="particlesInit"
  loaded="particlesLoaded"
  client:load
/>


<script>
  import type { Container, Engine } from "@tsparticles/engine";
  import { loadSlim } from "@tsparticles/slim";

  type PW = Window & {
  particlesInit: (e: Engine) => Promise<void>;
  particlesLoaded: (c?: Container) => void;
};

const w = window as unknown as PW; // <- así desaparece TS2352

w.particlesInit = async (engine) => { await loadSlim(engine); };
w.particlesLoaded = () => { console.log("particlesLoaded"); };
  
</script>
